services:
  zitadel:
    networks:
      - "zitadel"
    image: "ghcr.io/zitadel/zitadel:latest"
    restart: always
    command: 'start-from-init --masterkey "MasterkeyNeedsToHave32Characters" --tlsMode disabled'
    environment:
      - "ZITADEL_DATABASE_POSTGRES_HOST=db"
      - "ZITADEL_DATABASE_POSTGRES_PORT=5432"
      - "ZITADEL_DATABASE_POSTGRES_DATABASE=zitadel"
      - "ZITADEL_DATABASE_POSTGRES_USER_USERNAME=zitadel"
      - "ZITADEL_DATABASE_POSTGRES_USER_PASSWORD=zitadel"
      - "ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE=disable"
      - "ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME=postgres"
      - "ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD=postgres"
      - "ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE=disable"
      - "ZITADEL_EXTERNALSECURE=false"
    depends_on:
      db:
        condition: "service_healthy"
    ports:
      - "8080:8080"

  db:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - "zitadel"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: "10s"
      timeout: "30s"
      retries: 5
      start_period: "20s"
    ports:
      - "5432:5432"
    command:
      [
        "postgres",
        "-c",
        "log_statement=all",
        "-c",
        "wal_level=logical",
        "-c",
        "max_wal_senders=10",
        "-c",
        "max_replication_slots=10",
      ]

networks:
  zitadel:
